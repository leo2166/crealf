name: Deploy Flutter Web to GitHub Pages

on:
  push:
    branches:
      - main # Asegúrate de que esta es tu rama principal (main o master)

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permiso para escribir en el repositorio (para gh-pages)
      pages: write # Permiso para desplegar en GitHub Pages
      id-token: write # Necesario para la autenticación en páginas

    steps:
      - uses: actions/checkout@v4
        with:
          # Asegura la autenticación al clonar el repositorio, crucial para permisos de escritura.
          token: ${{ secrets.GITHUB_TOKEN }} 

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Puedes probar 'beta' o 'dev' si tu proyecto lo requiere, o una versión específica como '3.19.6'

      - name: 'Flutter clean'
        run: flutter clean

      - name: 'Get Flutter dependencies'
        run: flutter pub get

      - name: 'Install web development dependencies (optional)' # Paso opcional, pero seguro de dejar.
        run: dart pub global activate webdev || echo "webdev not installed or not needed"

      - name: 'Build Flutter web'
        run: |
          echo "Iniciando compilación web de Flutter..."
          # Intenta compilar la aplicación Flutter para la web.
          # --release para una compilación optimizada.
          # --base-href /crealf/ es CRUCIAL para GitHub Pages si el repo es una subruta.
          flutter build web --release --base-href /crealf/

          echo "----------------------------------------------------"
          echo "Verificando el contenido de 'build/web/' después de la compilación:"
          ls -laR build/web/ || echo "Directorio build/web/ no encontrado o vacío." # Muestra contenido del directorio esperado.
          echo "----------------------------------------------------"

          # Comprueba si index.html fue generado. Si no, imprime diagnósticos y falla.
          if [ ! -f build/web/index.html ]; then
            echo "****************************************************"
            echo "ERROR: index.html NO ENCONTRADO en 'build/web/' después de la compilación."
            echo "Esto indica que 'flutter build web' falló en generar los archivos esperados."
            echo "****************************************************"
            
            echo "----------------------------------------------------"
            echo "Contenido de todo el directorio 'build/' (diagnóstico completo):"
            ls -laR build/ || echo "Directorio build/ no encontrado o vacío." # Muestra todo el directorio build.
            echo "----------------------------------------------------"

            echo "----------------------------------------------------"
            echo "Detalles de 'flutter doctor -v' (diagnóstico del entorno Flutter):"
            flutter doctor -v # Proporciona información detallada del entorno Flutter.
            echo "----------------------------------------------------"

            echo "----------------------------------------------------"
            echo "Buscando archivos de log de Flutter en el directorio actual:"
            find . -name "flutter_*.log" || echo "No se encontraron archivos de log de Flutter." # Busca posibles logs de errores de Flutter.
            echo "----------------------------------------------------"
            
            exit 1 # Fuerza la falla del paso si index.html no está presente.
          fi
          echo "index.html generado exitosamente. Continuando con el despliegue."
          ls -la build/web/ # Confirma el contenido final antes del despliegue.

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Usa el token de GitHub para autenticación.
          publish_dir: ./build/web # Directorio con los archivos web compilados.
          cname: # Deja este campo vacío si no usas un dominio personalizado.